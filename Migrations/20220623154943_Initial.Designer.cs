// <auto-generated />
using System;
using APBD12.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APBD12.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220623154943_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APBD12.Entities.Models.List", b =>
                {
                    b.Property<int>("Id_list")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id_list");

                    b.ToTable("List");

                    b.HasData(
                        new
                        {
                            Id_list = 1,
                            Address = "VIP@example.com",
                            Created_at = new DateTime(2022, 6, 23, 17, 49, 42, 938, DateTimeKind.Local).AddTicks(7950),
                            Description = "Lista zawierająca wszystkich gości VIP",
                            Name = "VIP"
                        });
                });

            modelBuilder.Entity("APBD12.Entities.Models.Membership", b =>
                {
                    b.Property<int>("Id_list")
                        .HasColumnType("int");

                    b.Property<int>("Id_subscriber")
                        .HasColumnType("int");

                    b.Property<DateTime>("Added_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id_list", "Id_subscriber");

                    b.HasIndex("Id_subscriber");

                    b.ToTable("Membership");

                    b.HasData(
                        new
                        {
                            Id_list = 1,
                            Id_subscriber = 1,
                            Added_at = new DateTime(2022, 6, 23, 17, 49, 42, 972, DateTimeKind.Local).AddTicks(2420),
                            Status = "Unsubscribed"
                        },
                        new
                        {
                            Id_list = 1,
                            Id_subscriber = 2,
                            Added_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Subscribed"
                        },
                        new
                        {
                            Id_list = 1,
                            Id_subscriber = 3,
                            Added_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Subscribed"
                        });
                });

            modelBuilder.Entity("APBD12.Entities.Models.Subscriber", b =>
                {
                    b.Property<int>("Id_subscriber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id_subscriber");

                    b.ToTable("Subscriber");

                    b.HasData(
                        new
                        {
                            Id_subscriber = 1,
                            Address = "Antoni@gmail.com",
                            Name = "Antoni Przykładowy",
                            Status = "Verified"
                        },
                        new
                        {
                            Id_subscriber = 2,
                            Address = "bartlomiej@outlook.com",
                            Name = "Bartłomiej Następny",
                            Status = "Unknown"
                        },
                        new
                        {
                            Id_subscriber = 3,
                            Address = "cecylia@poczta.pl",
                            Name = "Cecylia Ostateczna",
                            Status = "Suppressed"
                        });
                });

            modelBuilder.Entity("APBD12.Entities.Models.Membership", b =>
                {
                    b.HasOne("APBD12.Entities.Models.List", "List")
                        .WithMany("Memberships")
                        .HasForeignKey("Id_list")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBD12.Entities.Models.Subscriber", "Subscriber")
                        .WithMany("Memberships")
                        .HasForeignKey("Id_subscriber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("List");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("APBD12.Entities.Models.List", b =>
                {
                    b.Navigation("Memberships");
                });

            modelBuilder.Entity("APBD12.Entities.Models.Subscriber", b =>
                {
                    b.Navigation("Memberships");
                });
#pragma warning restore 612, 618
        }
    }
}
